package step1; // package 경로

// 외부에서 이 클래스를 어떻게 접근할지 말지...
// (접근제어자) class (클래스명) {}
public class Solution01 {
    // 클래스 -> 기능 -> 메서드. (클래스 내부에서 미리 정의된 입/출력 관련 설정이 있는 코드 묶음(블록) -> 메서드)
    // 클래스 내부에 포함된 함수(프로시저) -> 메서드
    public static void main(String[] args) {
        // 메인 메서드 -> java 파일을 실행했을 때 자동으로 찾아주는 메서드. (진입점)
        // String[] args -> 매개변수(parameter) -> 외부와 매개해주는 변수
        // 변수. -> 내부에서 선언 및 할당 (초기화) -> 지역변수. 블록 내부에서 선언할 경우
        // 블록 외부에서 (메서드 외부) -> 그 경우 사용하는 걸 매개변수
        // -> 매개변수를 통해서 전달받는 값 -> 인자(인수) (arguments)
        // 변수는 매개변수, 값은 인자(인수)
        // (입력) parameter - argument
        // (출력) -> "return" -> 반환
        // void(반환 타입) -> 변수에 넣을 때 타입 체크를 할 수 있게 하는데...
        // 꼭 변수에 들어갈 필요는 없음. 그래서 아예 변수 할당이 아닌 메서드의 경우에는 'void'
        // static -> 클래스를 통해서 객체를 만들지 않아도 클래스 관련해서 static 메모리하는 영역에 저장되어 있는 메서드. (별도의 메모리에 이미 탑재 - 저장되어 있다)

    }
}
